name: build and push container image

on:
  workflow_call:
    inputs:
      image-name:
        description: image name
        type: string
        required: true
      context-directory:
        description: context directory
        type: string
        required: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}/${{ inputs.image-name }}

jobs:

  meta-data:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    outputs:
      tags: ${{ steps.docker-metadata.outputs.tags }}
      labels: ${{ steps.docker-metadata.outputs.labels }}
      build-cache-name-amd64: ${{ steps.foo.outputs.build-cache-name-amd64 }}
      build-cache-name-arm64: ${{ steps.foo.outputs.build-cache-name-arm64 }}
      build-cache-pkg-name:  ${{ steps.foo.outputs.build-cache-pkg-name }}
      # デフォルトブランチかタグの時のみPUSHする
      push: ${{ github.event_name != 'pull_request' && ( github.ref_name == github.event.repository.default_branch || github.ref_type == 'tag' ) }}

    steps:

      - id: foo
        run: |
          set -eu
          set -o pipefail
          set -o posix
          
          x="${IMAGE_NAME}/build-cache-${run_number}"

          (
            echo "build-cache-name-amd64=${REGISTRY}/${x}:amd64"
            echo "build-cache-name-arm64=${REGISTRY}/${x}:arm64"
            echo "build-cache-pkg-name=${x#${repository_owner}/}"
          ) | tee -a "$GITHUB_OUTPUT"
        env:
          run_number: ${{ github.run_number }}
          repository_owner: ${{ github.repository_owner }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,priority=100,event=tag
            type=sha,priority=400,format=short
            type=sha,priority=500,format=short,suffix=-{{date 'YYYYMMDDTHHmmss[Z]'}}

  build-arm64:
    needs:
      - meta-data    
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0
        with:
          # Set to true to publish the results as comment to the PR (applicable if workflow run is triggered by PR).
          comment_on_pr: false

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./.github/build/
        with:
          push: ${{ needs.meta-data.outputs.push }}
          arch: linux/arm64
          registry: ${{ env.REGISTRY }}
          context-directory: ${{ inputs.context-directory }}
          build-cache-name: ${{ needs.meta-data.outputs.build-cache-name-arm64 }}
          labels: ${{ needs.meta-data.outputs.labels }}

  build-amd64:
    needs:
      - meta-data
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0
        with:
          # Set to true to publish the results as comment to the PR (applicable if workflow run is triggered by PR).
          comment_on_pr: false

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./.github/build/
        with:
          push: ${{ needs.meta-data.outputs.push }}
          arch: linux/amd64
          registry: ${{ env.REGISTRY }}
          context-directory: ${{ inputs.context-directory }}
          build-cache-name: ${{ needs.meta-data.outputs.build-cache-name-amd64 }}
          labels: ${{ needs.meta-data.outputs.labels }}

  combine-images:
    runs-on: ubuntu-latest
    needs:
      - meta-data
      - build-amd64
      - build-arm64
    permissions:
      contents: read
      packages: write
    if: needs.meta-data.outputs.push == 'true'
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0
        with:
          # Set to true to publish the results as comment to the PR (applicable if workflow run is triggered by PR).
          comment_on_pr: false

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: combine images
        run: |
          set -eu
          set -o pipefail
          set -o posix

          for a in $multiarch_image; do
            docker buildx imagetools create -t "$a" "$amd64_image" "$arm64_image"
            echo
          done
        env:
          amd64_image: ${{ needs.meta-data.outputs.build-cache-name-amd64 }}
          arm64_image: ${{ needs.meta-data.outputs.build-cache-name-arm64 }}
          multiarch_image: ${{ needs.meta-data.outputs.tags }}

  fix-up:
    needs:
      - meta-data
      - build-amd64
      - build-arm64
      - combine-images
    if: ${{ always() }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    timeout-minutes: 10

    steps:
      - uses: actions/delete-package-versions@v4
        continue-on-error: true
        if: needs.meta-data.outputs.push == 'true'
        with:
          package-name: ${{ needs.meta-data.outputs.build-cache-pkg-name }}
          package-type: "container"
          min-versions-to-keep: 0

      - uses: Kesin11/actions-timeline@v2
